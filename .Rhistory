means40[i] = mean(rexp(40,0.2))}
g40 <- ggplot(data = as.data.frame(means40), aes(means40)) +
geom_histogram(bins=22,color = "magenta",fill = "light blue") +
geom_vline(xintercept = mean(means40), color = "dark blue", size = 1.3) +
labs(x = "Means of 40 obs.", y = "Count", title = "Simulation of 1000 means")
?dev.copy2pdf
dev.copy2pdf()
g40
dev.off
mean(means40)
library(dplyr)
library(ggplot2)
test1 <- rexp(40, 0.2)
means40 <- as.numeric(NULL)
for (i in 1:1000){
means40[i] = mean(rexp(40,0.2))}
g40 <- ggplot(data = as.data.frame(means40), aes(means40)) +
geom_histogram(bins=22,color = "magenta",fill = "light blue") +
geom_vline(xintercept = mean(means40), color = "dark blue", size = 1.3) +
labs(x = "Means of 40 obs.", y = "Count", title = "Simulation of 1000 means")
g40
g40
g40
mean(g40)
mean(means40)
library(dplyr)
library(ggplot2)
test1 <- rexp(40, 0.2)
means40 <- as.numeric(NULL)
setwd(23842)
for (i in 1:1000){
means40[i] = mean(rexp(40,0.2))}
g40 <- ggplot(data = as.data.frame(means40), aes(means40)) +
geom_histogram(bins=22,color = "magenta",fill = "light blue") +
geom_vline(xintercept = mean(means40), color = "dark blue", size = 1.3) +
labs(x = "Means of 40 obs.", y = "Count", title = "Simulation of 1000 means")
g40
mean(means40)
library(dplyr)
library(ggplot2)
test1 <- rexp(40, 0.2)
means40 <- as.numeric(NULL)
setwd(23842)
for (i in 1:1000){
means40[i] = mean(rexp(40,0.2))}
g40 <- ggplot(data = as.data.frame(means40), aes(means40)) +
geom_histogram(bins=22,color = "magenta",fill = "light blue") +
geom_vline(xintercept = mean(means40), color = "dark blue", size = 1.3) +
labs(x = "Means of 40 obs.", y = "Count", title = "Simulation of 1000 means")
g40
library(dplyr)
library(ggplot2)
test1 <- rexp(40, 0.2)
means40 <- as.numeric(NULL)
setwd(23842)
for (i in 1:1000){
means40[i] = mean(rexp(40,0.2))}
g40 <- ggplot(data = as.data.frame(means40), aes(means40)) +
geom_histogram(bins=22,color = "magenta",fill = "light blue") +
geom_vline(xintercept = mean(means40), color = "dark blue", size = 1.3) +
labs(x = "Means of 40 obs.", y = "Count", title = "Simulation of 1000 means")
g40
library(dplyr)
library(ggplot2)
test1 <- rexp(40, 0.2)
means40 <- as.numeric(NULL)
setwd(23842)
for (i in 1:1000){
means40[i] = mean(rexp(40,0.2))}
g40 <- ggplot(data = as.data.frame(means40), aes(means40)) +
geom_histogram(bins=22,color = "magenta",fill = "light blue") +
geom_vline(xintercept = mean(means40), color = "dark blue", size = 1.3) +
labs(x = "Means of 40 obs.", y = "Count", title = "Simulation of 1000 means")
g40
library(dplyr)
library(ggplot2)
test1 <- rexp(40, 0.2)
means40 <- as.numeric(NULL)
setwd(23842)
for (i in 1:1000){
means40[i] = mean(rexp(40,0.2))}
g40 <- ggplot(data = as.data.frame(means40), aes(means40)) +
geom_histogram(bins=22,color = "magenta",fill = "light blue") +
geom_vline(xintercept = mean(means40), color = "dark blue", size = 1.3) +
labs(x = "Means of 40 obs.", y = "Count", title = "Simulation of 1000 means")
g40
mean(means40)
library(dplyr)
library(ggplot2)
test1 <- rexp(40, 0.2)
means40 <- as.numeric(NULL)
set.seed(23842)
for (i in 1:1000){
means40[i] = mean(rexp(40,0.2))}
g40 <- ggplot(data = as.data.frame(means40), aes(means40)) +
geom_histogram(bins=22,color = "magenta",fill = "light blue") +
geom_vline(xintercept = mean(means40), color = "dark blue", size = 1.3) +
labs(x = "Means of 40 obs.", y = "Count", title = "Simulation of 1000 means")
g40
library(dplyr)
library(ggplot2)
test1 <- rexp(40, 0.2)
means40 <- as.numeric(NULL)
set.seed(23842)
for (i in 1:1000){
means40[i] = mean(rexp(40,0.2))}
g40 <- ggplot(data = as.data.frame(means40), aes(means40)) +
geom_histogram(bins=22,color = "magenta",fill = "light blue") +
geom_vline(xintercept = mean(means40), color = "dark blue", size = 1.3) +
labs(x = "Means of 40 obs.", y = "Count", title = "Simulation of 1000 means")
g40
library(dplyr)
library(ggplot2)
test1 <- rexp(40, 0.2)
means40 <- as.numeric(NULL)
set.seed(23842)
for (i in 1:1000){
means40[i] = mean(rexp(40,0.2))}
g40 <- ggplot(data = as.data.frame(means40), aes(means40)) +
geom_histogram(bins=22,color = "magenta",fill = "light blue") +
geom_vline(xintercept = mean(means40), color = "dark blue", size = 1.3) +
labs(x = "Means of 40 obs.", y = "Count", title = "Simulation of 1000 means")
g40
library(dplyr)
library(ggplot2)
test1 <- rexp(40, 0.2)
means40 <- as.numeric(NULL)
set.seed(2382)
for (i in 1:1000){
means40[i] = mean(rexp(40,0.2))}
g40 <- ggplot(data = as.data.frame(means40), aes(means40)) +
geom_histogram(bins=22,color = "magenta",fill = "light blue") +
geom_vline(xintercept = mean(means40), color = "dark blue", size = 1.3) +
labs(x = "Means of 40 obs.", y = "Count", title = "Simulation of 1000 means")
g40
mean(set.seed)
mean(means40)
library(dplyr)
library(ggplot2)
test1 <- rexp(40, 0.2)
means40 <- as.numeric(NULL)
set.seed(23892)
for (i in 1:1000){
means40[i] = mean(rexp(40,0.2))}
g40 <- ggplot(data = as.data.frame(means40), aes(means40)) +
geom_histogram(bins=22,color = "magenta",fill = "light blue") +
geom_vline(xintercept = mean(means40), color = "dark blue", size = 1.3) +
labs(x = "Means of 40 obs.", y = "Count", title = "Simulation of 1000 means")
g40
library(dplyr)
library(ggplot2)
test1 <- rexp(40, 0.2)
means40 <- as.numeric(NULL)
set.seed(23890)
for (i in 1:1000){
means40[i] = mean(rexp(40,0.2))}
g40 <- ggplot(data = as.data.frame(means40), aes(means40)) +
geom_histogram(bins=22,color = "magenta",fill = "light blue") +
geom_vline(xintercept = mean(means40), color = "dark blue", size = 1.3) +
labs(x = "Means of 40 obs.", y = "Count", title = "Simulation of 1000 means")
g40
library(dplyr)
library(ggplot2)
test1 <- rexp(40, 0.2)
means40 <- as.numeric(NULL)
set.seed(232)
for (i in 1:1000){
means40[i] = mean(rexp(40,0.2))}
g40 <- ggplot(data = as.data.frame(means40), aes(means40)) +
geom_histogram(bins=22,color = "magenta",fill = "light blue") +
geom_vline(xintercept = mean(means40), color = "dark blue", size = 1.3) +
labs(x = "Means of 40 obs.", y = "Count", title = "Simulation of 1000 means")
g40
mena(means40)
mean(means40)
sd(means40)
mean(means40)
norm.test()
normal.test
normal.test(0)
?t.test
t.test(means40, mu = 5, alternative = c("two.sided"))
library(dplyr)
library(ggplot2)
#1000 simulations of means of 40 obs., taken from
#exponential distribution with lambda = 0.2
means40 <- as.numeric(NULL)
set.seed(232)
for (i in 1:1000){
means40[i] = mean(rexp(40,0.2))}
g40 <- ggplot(data = as.data.frame(means40), aes(means40)) +
geom_histogram(bins=22,color = "magenta",fill = "light blue") +
geom_vline(xintercept = mean(means40), color = "dark blue", size = 1.3) +
labs(x = "Means of 40 obs.", y = "Count", title = "Simulation of 1000 means")
g40
# Hypothesis t-test for means40, two-sided
t.test(means40, mu = 5, alternative = c("two.sided"))
# We get p-value = 0.2358 which is larger than any reasonable alpha.
qplot(rexp(1000,0.2))
mean(rexp(1000, 0.2))
mean(rexp(1000, 0.2))
mean(rexp(1000, 0.2))
mean(rexp(1000, 0.2))
mean(rexp(1000, 0.2))
mean(rexp(1000, 0.2))
mean(rexp(40000, 0.2))
mean(rexp(40000, 0.2))
mean(rexp(40000, 0.2))
set.seed(5)
exponential < -mean(rexp(1000, 0.2))
qplot(exponential)
set.seed(5)
test1000 <- (rexp(1000, 0.2))
qplot(test1000)
g40
dirname(
)
dirname(parent.frame)
parent.frame()
parent.frame(2)
parent.frame(2)ofile
parent.frame(2)$ofile
r)
library(ggplot2)
library(dplyr)
this.dir <- dirname(parent.frame(2)$ofile)
getActiveDocumentContext()
current_vars(
)
?getw
?getwd
library(ggplot2)
library(dplyr)
setwd('C:\Users\barca\Desktop\DATA SCIENCE\Reproducible Research week 2\Files for project')
library(ggplot2)
library(dplyr)
setwd('C:\\Users\\barca\\Desktop\\DATA SCIENCE\\Reproducible Research week 2\\Files for project')
library(ggplot2)
library(dplyr)
setwd('\\Files for project')
library(ggplot2)
library(dplyr)
setwd('\\barca\\Desktop\\DATA SCIENCE\\Reproducible Research week 2\\Files for project')
library(ggplot2)
library(dplyr)
setwd('barca\\Desktop\\DATA SCIENCE\\Reproducible Research week 2\\Files for project')
library(ggplot2)
library(dplyr)
setwd("C:\\Users\\barca\\Desktop\\DATA SCIENCE\\Reproducible Research week 2")
library(ggplot2)
library(dplyr)
setwd("C:\\Users\\barca\\Desktop\\DATA SCIENCE\\Reproducible Research week 2")
?read.csv
data <- read.csv("activity.csv", header = T, na.strings = "NA", col.names = c("Steps", "Date", "Interval"))
data
names(data)
stepsData <- read.csv("activity.csv", header = T, na.strings = "NA", col.names = c("Steps", "Date", "Interval"))
stepsData <- read.csv("activity.csv", header = T, na.strings = "NA", col.names = c("Steps", "Date", "Interval"))
stepsData <- read.csv("activity.csv", header = T, na.strings = "NA", col.names = c("Steps", "Date", "Interval"))
```{r cache = TRUE}
```{r cache = TRUE}
```{r cache = TRUE}
stepsData
stepsData <- tbl_df(read.csv("activity.csv", header = T, na.strings = "NA", col.names = c("Steps", "Date", "Interval")))
View(stepsData)
stepsData <- tbl_df(read.csv("activity.csv", header = T, na.strings = "NA", col.names = c("Steps", "Date", "Interval")))
summary(stepsData)
?as.POSIXct.Date
stepsData <- tbl_df(read.csv("activity.csv", header = T, na.strings = "NA", col.names = c("Steps", "Date", "Interval")))
stepsData$Date <- as.POSIXct.date(stepsData$Date, format = "%yyyy-%mm-%dd")
library(lubridate)
?as.date
?as.Date
stepsData$Date <- as.Date(stepsData$Date, format = "%Y-%m-%d")
stepsData$Date
head(stepsData$Date)
typeof(stepsData$Date)
stepsData <- tbl_df(read.csv("activity.csv", header = T, na.strings = "NA", col.names = c("Steps", "Date", "Interval")))
stepsData$Date <- as.Date(stepsData$Date, format = "%Y-%m-%d")
wday(stepsData$Date)
year(stepsData$Date
)
stepsData <- tbl_df(read.csv("activity.csv", header = T, na.strings = "NA", col.names = c("Steps", "Date", "Interval")))
year(stepsData$Date)
?lubridate
?myd
stepsData <- tbl_df(read.csv("activity.csv", header = T, na.strings = "NA", col.names = c("Steps", "Date", "Interval")))
stepsData$Date <- ymd(stepsData$Date)
typeof(stepsData$Date)
stepsData$Date
myshit <- ymd(stepsData$Date)
myshit
typeof(myshit)
b <- "2018-02-26"
b
bc <- ymd(b)
typeof(b0
typeof(b)
typeof(bc)
sapply(split(stepsData$Steps, stepsData$Date), sum, na.rm = TRUE)
library(ggplot2)
library(dplyr)
library(lubridate)
setwd("C:\\Users\\barca\\Desktop\\DATA SCIENCE\\Reproducible Research week 2")
stepsData <- tbl_df(read.csv("activity.csv", header = T, na.strings = "NA", col.names = c("Steps", "Date", "Interval")))
stepsData$Date <- ymd(stepsData$Date)
library(ggplot2)
library(dplyr)
library(lubridate)
setwd("C:\\Users\\barca\\Desktop\\DATA SCIENCE\\Reproducible Research week 2")
stepsData <- tbl_df(read.csv("activity.csv", header = T, na.strings = "NA", col.names = c("Steps", "Date", "Interval")))
stepsData$Date <- ymd(stepsData$Date)
sums <- sapply(split(stepsData$Steps, stepsData$Date), sum, na.rm = TRUE)
hist(sums)
ggplot(sums, aes(sums)) + geom_histogram()
ggplot(as.data.frame(sums), aes(sums)) + geom_histogram()
sums <- sapply(split(stepsData$Steps, stepsData$Date), sum, na.rm = TRUE)
ggplot(as.data.frame(sums), aes(sums)) + geom_histogram(binwidth = 50)
sums <- sapply(split(stepsData$Steps, stepsData$Date), sum, na.rm = TRUE)
ggplot(as.data.frame(sums), aes(sums)) + geom_histogram(binwidth = 100)
sums <- sapply(split(stepsData$Steps, stepsData$Date), sum, na.rm = TRUE)
ggplot(as.data.frame(sums), aes(sums)) + geom_histogram(bins = 20)
sums <- sapply(split(stepsData$Steps, stepsData$Date), sum, na.rm = TRUE)
ggplot(as.data.frame(sums), aes(sums)) + labs(tilte = "Steps histogram", x = "Total steps per day", y = "Frequency") + geom_histogram(bins = 20)
sums <- sapply(split(stepsData$Steps, stepsData$Date), sum, na.rm = TRUE)
ggplot(as.data.frame(sums), aes(sums)) + labs(title = "Steps histogram", x = "Total steps per day", y = "Frequency") + geom_histogram(bins = 20)
head(sums)
mean(sums)
sums == 0
sums2 <- sums(sums != 0)
sums2 <- sums[sums != 0]
sums
sums
sums2
count(sums2)
sums2 <- sums[sums != 0]
data.frame(mean = mean(sums), median = median(sums))
?weekdays
typeof(stepData)
typeof(stepsData)
stepsData <- mutate(stepsData, Weekday == weekdays(Date))
stepsData <- mutate(stepsData, Weekday = weekdays(Date))
View(stepsData)
stepsData$Weekday
typeof(stepsData$Weekday
)
stepsData <- mutate(stepsData, Weekday = weekdays(Date))
for(i in 1:length(stepsData)) {
if(stepsData$Weekday[i] == "суббота" | stepsData$Weekday == "воскресенье") {
stepsData$Weekday[i] = "weekend"
}       else {stepsData$Weekday[i] = "weekday"} }
stepsData <- mutate(stepsData, Weekday = weekdays(Date))
for(i in 1:length(stepsData)) {
if(stepsData$Weekday[i] == "суббота" || stepsData$Weekday == "воскресенье") {
stepsData$Weekday[i] = "weekend"
}       else {stepsData$Weekday[i] = "weekday"} }
rm(list = ls()
)
Project 1
=========
Loading necessary packages to start the work.
```{r cache = TRUE, results = "hide"}
library(ggplot2)
library(dplyr)
library(lubridate)
setwd("C:\\Users\\barca\\Desktop\\DATA SCIENCE\\Reproducible Research week 2") # Change to your WD if necessary.
```
Loading and doing some transformations with data.
```{r cache = TRUE}
stepsData <- tbl_df(read.csv("activity.csv", header = T, na.strings = "NA", col.names = c("Steps", "Date", "Interval")))
stepsData$Date <- ymd(stepsData$Date)
```
##Part 1
Calculating total number of steps by days and building a histogram using ggplot2 package.
```{r cache = TRUE}
sums <- sapply(split(stepsData$Steps, stepsData$Date), sum, na.rm = TRUE)
ggplot(as.data.frame(sums), aes(sums)) + labs(title = "Steps histogram", x = "Total steps per day", y = "Frequency") + geom_histogram(bins = 15)
```
Calculating mean and median for total steps taken per day. First we will remove the NA values, which have been transformed into 0 total steps per day.
```{r}
sums2 <- sums[sums != 0]
data.frame(mean = mean(sums), median = median(sums))
```
##Part 2
Adding factor variable, which will differ weekdays from weekends.
```{r cache = TRUE}
stepsData <- mutate(stepsData, Weekday = weekdays(Date))
for(i in 1:length(stepsData)) {
if(stepsData$Weekday[i] == "суббота" || stepsData$Weekday == "воскресенье") {
stepsData$Weekday[i] = "weekend"
}       else {stepsData$Weekday[i] = "weekday"} }
```
View(stepsData)
length(stepsData)
length(stepsData$Date
)
stepsData <- mutate(stepsData, Weekday = weekdays(Date))
for(i in 1:length(stepsData$Steps)) {
if(stepsData$Weekday[i] == "суббота" || stepsData$Weekday == "воскресенье") {
stepsData$Weekday[i] = "weekend"
}       else {stepsData$Weekday[i] = "weekday"} }
View(stepsData)
stepsData$Weekday <- as.factor(stepsData$Weekday)
stepsData <- mutate(stepsData, Weekday = weekdays(Date))
for(i in 1:length(stepsData$Steps)) {
if(stepsData$Weekday[i] == "суббота" || stepsData$Weekday ==                                                            "воскресенье") {
stepsData$Weekday[i] = "weekend"
}else {stepsData$Weekday[i] = "weekday"}
}
stepsData$Weekday <- as.factor(stepsData$Weekday)
View(stepsData)
stepsData$Weekday
ls()
rm(list = ls()
)
ls()
for(i in 1:length(stepsData$Steps)) {
if(stepsData$Weekday[i] == "суббота") {stepsData$Weekday[i] = "weekend"}
else if (stepsData$Weekday = "воскресенье") {stepsData$Weekday[i] =                                                   "weekend"
for(i in 1:length(stepsData$Steps)) {
if(stepsData$Weekday[i] == "суббота") {stepsData$Weekday[i] = "weekend"}
else if (stepsData$Weekday[i] = "воскресенье") {stepsData$Weekday[i] =                                                   "weekend"
for(i in 1:length(stepsData$Steps)) {
if(stepsData$Weekday[i] == "суббота") {stepsData$Weekday[i] = "weekend"
}else if (stepsData$Weekday[i] == "воскресенье") {stepsData$Weekday[i]                                                      = "weekend"
}else {stepsData$Weekday[i] = "weekday"}
}
stepsData <- tbl_df(read.csv("activity.csv", header = T, na.strings = "NA", col.names = c("Steps", "Date", "Interval")))
stepsData$Date <- ymd(stepsData$Date)
for(i in 1:length(stepsData$Steps)) {
if(stepsData$Weekday[i] == "суббота") {stepsData$Weekday[i] = "weekend"
}else if (stepsData$Weekday[i] == "воскресенье") {stepsData$Weekday[i]                                                      = "weekend"
}else {stepsData$Weekday[i] = "weekday"}
}
stepsData <- mutate(stepsData, Weekday = weekdays(Date))
for(i in 1:length(stepsData$Steps)) {
if(stepsData$Weekday[i] == "суббота") {stepsData$Weekday[i] = "weekend"
}else if (stepsData$Weekday[i] == "воскресенье") {stepsData$Weekday[i]                                                      = "weekend"
}else {stepsData$Weekday[i] = "weekday"}
}
stepsData$Weekday <- as.factor(stepsData$Weekday)
summary(stepsData$Weekday)
View(stepsData)
test <- group_by(stepsData, Interval)
test
summarise(test, mean)
?summarise
test2 <- summarize(test, mean)
test2 <- summarize(test, New = mean(Interval))
test2
rm(test2)
test2 <- summarize(test, New = mean(Steps))
test2
View(interval)
View(test2
)
test2 <- summarize(test, New = mean(Steps, na.rm = T))
rm(list = ls()
)
stepsData <- tbl_df(read.csv("activity.csv", header = T, na.strings = "NA", col.names = c("Steps", "Date", "Interval")))
stepsData$Date <- ymd(stepsData$Date)
sums <- sapply(split(stepsData$Steps, stepsData$Date), sum, na.rm = TRUE)
ggplot(as.data.frame(sums), aes(sums)) + labs(title = "Steps histogram", x = "Total steps per day", y = "Frequency") + geom_histogram(bins = 15)
sums2 <- sums[sums != 0]
data.frame(mean = mean(sums), median = median(sums))
View(stepsData)
stepsbyints <- group_by(stepsData, Interval)
warnings()
View(stepsbyints)
table(stepsbyints$Interval)
stepsbyints <- group_by(stepsData, Interval)
stepsint <- summarize(stepsbyints, MeanSteps = mean(Steps, na.rm = T))
warnings()
stepsint
View(stepsint)
ggplot(stepsint, aes(Interval, MeanSteps)) + geom_line()
stepsbyints <- group_by(stepsData, Interval)
stepsint <- summarize(stepsbyints, MeanSteps = mean(Steps, na.rm = T))
ggplot(stepsint, aes(Interval, MeanSteps)) + geom_line()
stepsbyints <- group_by(stepsData, Interval)
stepsbyints <- group_by(stepsData, Interval)
stepsint <- summarize(stepsbyints, MeanSteps = mean(Steps, na.rm = T))
ggplot(stepsint, aes(Interval, MeanSteps)) + geom_line()
stepsbyints <- group_by(stepsData, Interval)
stepsint <- summarize(stepsbyints, MeanSteps = mean(Steps, na.rm = T))
ggplot(stepsint, aes(Interval, MeanSteps)) + geom_line()
rm(list=ls())
stepsbyints <- group_by(stepsData, Interval)
library(ggplot2)
library(dplyr)
library(lubridate)
setwd("C:\\Users\\barca\\Desktop\\DATA SCIENCE\\Reproducible Research week 2") # Change to your WD if necessary.
stepsData <- tbl_df(read.csv("activity.csv", header = T, na.strings = "NA", col.names = c("Steps", "Date", "Interval")))
stepsData$Date <- ymd(stepsData$Date)
sums <- sapply(split(stepsData$Steps, stepsData$Date), sum, na.rm = TRUE)
ggplot(as.data.frame(sums), aes(sums)) + labs(title = "Steps histogram", x = "Total steps per day", y = "Frequency") + geom_histogram(bins = 15)
sums2 <- sums[sums != 0]
data.frame(mean = mean(sums), median = median(sums))
stepsbyints <- group_by(stepsData, Interval)
stepsint <- summarize(stepsbyints, MeanSteps = mean(Steps, na.rm = T))
ggplot(stepsint, aes(Interval, MeanSteps)) + geom_line()
library(ggplot2)
library(dplyr)
library(lubridate)
setwd("C:\\Users\\barca\\Desktop\\DATA SCIENCE\\Reproducible Research week 2") # Change to your WD if necessary.
warnings()
stepsData <- mutate(stepsData, Weekday = weekdays(Date))
rm(list=ls())
library(ggplot2)
library(dplyr)
library(lubridate)
setwd("C:\\Users\\barca\\Desktop\\DATA SCIENCE\\Reproducible Research week 2") # Change to your WD if necessary.
